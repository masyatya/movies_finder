{"version":3,"sources":["api/index.js","store/movies.js","store/pagination.js","store/details.js","store/queries.js","store/index.js","components/MoviesList/MoviesList.jsx","components/DetailsMovie/DetailsMovie.jsx","components/SearchForm/SearchFrom.jsx","App.jsx","index.jsx","assets/images/no-poster-available.jpg"],"names":["BASE_URL","setQueryStore","query","type","initialState","movies","isLoading","hasError","moviesReducer","state","action","error","setCurrentPage","currentPage","numberOfPosts","paginationReducer","imdbId","movieInfo","isInitialized","detailsReducer","addQuery","queries","queriesReducer","length","getMovies","selectorsMovies","getQuery","getErrorNameMovies","getIsLoadingMovies","getCurrentPage","selectorsPagination","pagination","getNumberOfPosts","getImdbId","selectorsDetails","details","getMovieInfo","getIsLoadingDetails","getErrorNameDetails","getQueries","selectorsQueries","getLastQuery","rootReducer","combineReducers","persistedState","JSON","parse","localStorage","getItem","store","createStore","applyMiddleware","thunk","subscribe","setItem","stringify","getState","MoviesList","dispatch","useDispatch","useSelector","selectors","errorName","useEffect","title","page","fetch","then","response","json","res","Response","setMovies","Search","setNumberOfPosts","totalResults","Error","className","map","movie","key","imdbID","onClick","setImdbId","window","scrollTo","src","Poster","noPosterImg","alt","Title","Year","activePage","totalItemsCount","itemsCountPerPage","onChange","pageNumber","setCurrentPageWithScroll","innerClass","linkClass","activeLinkClass","prevPageText","nextPageText","DetailsMovie","useState","description","setDescription","shortDescription","setShortDescription","isShortDescription","setIsShortDescription","setMovieInfo","Plot","split","slice","join","concat","imdbRating","Director","Writer","SearchForm","lastQuery","setQuery","isShowHistory","setIsShowHistory","onSubmit","event","preventDefault","trim","handleSearch","placeholder","value","target","i","App","app","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.4d8f1ef7.chunk.js","sourcesContent":["const BASE_URL = 'https://www.omdbapi.com/?apikey=c364c392';\n\nexport const getMovies = (title, page) => {\n  return fetch(`${BASE_URL}&s=${title}&page=${page}`)\n    .then(response => response.json());\n};\n\nexport const getMovieInfo = (imdbId) => {\n  return fetch(`${BASE_URL}&i=${imdbId}&plot=full`)\n    .then(response => response.json());\n};\n","const START_LOADING_MOVIES = 'START_LOADING_MOVIES';\nconst LOADING_ERROR_MOVIES = 'LOADING_ERROR_MOVIES';\nconst ERROR_OFF_MOVIES = 'ERROR_OFF_MOVIES';\nconst SET_MOVIES = 'SET_MOVIES';\nconst SET_QUERY = 'SET_QUERY';\n\nexport const startLoadingMovies = () => ({ type: START_LOADING_MOVIES });\nexport const loadingErrorMovies = (error) => ({ type: LOADING_ERROR_MOVIES, error });\nexport const setErrorOffMovies = () => ({ type: ERROR_OFF_MOVIES })\nexport const setMovies = movies => ({ type: SET_MOVIES, movies });\nexport const setQueryStore = query => ({ type: SET_QUERY, query });\n\nconst initialState = {\n  movies: [],\n  query: '',\n  isLoading: false,\n  hasError: '',\n}\n\nexport const getMovies = state => state.movies;\nexport const getQuery = state => state.query;\nexport const getMoviesLength = state => state.movies.length;\nexport const getIsLoading = state => state.isLoading;\nexport const getErrorName = state => state.hasError;\n\nconst moviesReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case START_LOADING_MOVIES:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: '',\n      }\n    case LOADING_ERROR_MOVIES:\n      return {\n        ...state,\n        movies: [],\n        isLoading: false,\n        hasError: action.error,\n      }\n    case ERROR_OFF_MOVIES:\n      return {\n        ...state,\n        hasError: '',\n      }\n    case SET_MOVIES:\n      return {\n        ...state,\n        movies: action.movies,\n        isLoading: false,\n        hasError: '',\n      }\n    case SET_QUERY:\n      return {\n        ...state,\n        query: action.query,\n      }\n    default:\n      return state;\n  }\n}\n\nexport default moviesReducer;\n","const SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\nconst SET_NUMBER_OF_POSTS = 'SET_NUMBER_OF_POSTS';\n\nexport const setCurrentPage = currentPage => ({ type: SET_CURRENT_PAGE, currentPage})\nexport const setNumberOfPosts = numberOfPosts => ({ type: SET_NUMBER_OF_POSTS, numberOfPosts });\n\nconst initialState = {\n  currentPage: 0,\n  numberOfPosts: 0,\n}\n\nexport const getCurrentPage = state => state.currentPage;\nexport const getNumberOfPosts = state => state.numberOfPosts;\n\nconst paginationReducer = (state = initialState, action) => {\n  switch(action.type) {\n    case SET_CURRENT_PAGE:\n      return {\n        ...state,\n        currentPage: action.currentPage,\n      }\n    case SET_NUMBER_OF_POSTS:\n      return {\n        ...state,\n        numberOfPosts: action.numberOfPosts,\n      }\n    default:\n      return state;\n  }\n}\n\nexport default paginationReducer;\n","const START_LOADING_DETAILS = 'START_LOADING_DETAILS';\nconst LOADING_ERROR_DETAILS = 'LOADING_ERROR_DETAILS';\nconst SET_IMDB_ID = 'SET_IMDB_ID';\nconst SET_MOVIE_INFO = 'SET_MOVIE_INFO';\nconst DELETE_MOVIE_INFO = 'DELETE_MOVIE_INFO';\n\nexport const startLoadingDetails = () => ({ type: START_LOADING_DETAILS });\nexport const loadingErrorDetails = (error) => ({ type: LOADING_ERROR_DETAILS, error });\nexport const setImdbId = imdbId => ({ type: SET_IMDB_ID, imdbId });\nexport const setMovieInfo = movieInfo => ({ type: SET_MOVIE_INFO, movieInfo });\nexport const deleteMovieInfo = () => ({ type: DELETE_MOVIE_INFO });\n\nconst initialState = {\n  imdbId: 0,\n  movieInfo: null,\n  isLoading: false,\n  hasError: '',\n  isInitialized: false,\n}\n\nexport const getIsLoading = state => state.isLoading;\nexport const getErrorName = state => state.hasError;\nexport const getImdbId = state => state.imdbId;\nexport const getMovieInfo = state => state.movieInfo;\nexport const getMovieInfoInit = state => state.isInitialized;\n\nconst detailsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case START_LOADING_DETAILS:\n      return {\n        ...state,\n        isLoading: true,\n        hasError: '',\n        isInitialized: true,\n      }\n    case LOADING_ERROR_DETAILS:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: action.error,\n      }\n    case SET_IMDB_ID:\n      return {\n        ...state,\n        imdbId: action.imdbId,\n      }\n    case SET_MOVIE_INFO:\n      return {\n        ...state,\n        movieInfo: action.movieInfo,\n        isLoading: false,\n        hasError: '',\n      }\n    case DELETE_MOVIE_INFO:\n      return {\n        ...state,\n        movieInfo: null,\n        imdbId: 0,\n      }\n    default:\n      return state;\n  }\n}\n\nexport default detailsReducer;\n","const ADD_QUERY = 'ADD_QUERY';\nconst DELETE_QUERIES = 'DELETE_QUERIES'\n\nexport const addQuery = query => ({ type: ADD_QUERY, query });\nexport const deleteQueries = query => ({ type: DELETE_QUERIES });\n\nexport const getQueries = state => state.queries;\nexport const getLastQuery = state => state.queries[state.queries.length - 1];\n\nconst initialState = {\n  queries: [],\n}\n\nconst queriesReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_QUERY:\n      if(state.queries[state.queries.length - 1] === action.query) {\n        return state;\n      }\n\n      return {\n        ...state,\n        queries: [...state.queries, action.query],\n      }\n    case DELETE_QUERIES:\n      return {\n        ...state,\n        queries: [state.queries[state.queries.length - 1]],\n      }\n    default:\n      return state;\n  }\n}\n\nexport default queriesReducer;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport moviesReducer from './movies';\nimport paginationReducer from './pagination';\nimport detailsReducer from './details';\nimport queriesReducer from './queries';\nimport * as selectorsMovies from './movies';\nimport * as selectorsPagination from './pagination';\nimport * as selectorsDetails from './details';\nimport * as selectorsQueries from './queries';\n\nexport const getMovies = state => selectorsMovies.getMovies(state.movies);\nexport const getQuery = state => selectorsMovies.getQuery(state.movies);\nexport const getMoviesLength = state => selectorsMovies.getMoviesLength(state.movies);\nexport const getErrorNameMovies = state => selectorsMovies.getErrorName(state.movies);\nexport const getIsLoadingMovies = state => selectorsMovies.getIsLoading(state.movies);\nexport const getCurrentPage = state => selectorsPagination.getCurrentPage(state.pagination);\nexport const getNumberOfPosts = state => selectorsPagination.getNumberOfPosts(state.pagination);\nexport const getImdbId = state => selectorsDetails.getImdbId(state.details);\nexport const getMovieInfo = state => selectorsDetails.getMovieInfo(state.details);\nexport const getIsLoadingDetails = state => selectorsDetails.getIsLoading(state.details);\nexport const getErrorNameDetails = state => selectorsDetails.getErrorName(state.details);\nexport const getMovieInfoInit = state => selectorsDetails.getMovieInfoInit(state.details);\n\nexport const getQueries = state => selectorsQueries.getQueries(state.queries);\nexport const getLastQuery = state => selectorsQueries.getLastQuery(state.queries);\n\nconst rootReducer = combineReducers({\n  movies: moviesReducer,\n  pagination: paginationReducer,\n  details: detailsReducer,\n  queries: queriesReducer,\n})\n\nconst persistedState = JSON.parse(localStorage.getItem('reduxState')) || {};\n\nconst store = createStore(\n  rootReducer,\n  persistedState,\n  applyMiddleware(thunk)\n)\n\nstore.subscribe(()=>{\n  localStorage.setItem('reduxState', JSON.stringify(store.getState()))\n})\n\nexport default store;\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Pagination from 'react-js-pagination';\nimport { getMovies } from '../../api';\nimport * as selectors from '../../store';\nimport noPosterImg from '../../assets/images/no-poster-available.jpg';\nimport {\n  setMovies,\n  startLoadingMovies,\n  loadingErrorMovies,\n} from '../../store/movies';\nimport { setCurrentPage, setNumberOfPosts } from '../../store/pagination';\nimport { setImdbId } from '../../store/details';\n\nexport const MoviesList = () => {\n  const dispatch = useDispatch();\n  const movies = useSelector(selectors.getMovies);\n  const query = useSelector(selectors.getQuery);\n  const currentPage = useSelector(selectors.getCurrentPage);\n  const numberOfPosts = useSelector(selectors.getNumberOfPosts);\n\n  const isLoading = useSelector(selectors.getIsLoadingMovies);\n  const errorName = useSelector(selectors.getErrorNameMovies);\n\n  useEffect(() => {\n    if (!currentPage) {\n      return;\n    }\n\n    dispatch(startLoadingMovies());\n    getMovies(query, currentPage)\n      .then((res) => {\n\n        if(res.Response === 'False') {\n          dispatch(loadingErrorMovies(res.Error));\n          return;\n        }\n        dispatch(setMovies(res.Search));\n        dispatch(setNumberOfPosts(+res.totalResults));\n      })\n  }, [query, currentPage]);\n\n  const setCurrentPageWithScroll = (pageNumber) => {\n    dispatch(setCurrentPage(pageNumber));\n    window.scrollTo(0, 0);\n  }\n\n  const setImdbIdWithScroll = (imdbId) => {\n    dispatch(setImdbId(imdbId));\n    window.scrollTo(0, 0);\n  }\n\n\n  if(isLoading) {\n    return (\n      <div className=\"spinner\">\n        <div className=\"dot1\"></div>\n        <div className=\"dot2\"></div>\n      </div>\n    )\n  }\n\n  if(errorName !== '') {\n    return (\n      <p className=\"error__message\">Oops... {errorName} Please, try again.</p>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"cards\">\n        {movies.map(movie => (\n          <div\n            className=\"card\"\n            key={movie.imdbID}\n            onClick={() => setImdbIdWithScroll(movie.imdbID)}\n          >\n            <div className=\"card__image\">\n              <img\n                src={movie.Poster !== 'N/A'\n                  ? movie.Poster\n                  : noPosterImg\n                }\n                alt=\"Film logo\"\n              />\n            </div>\n            <div className=\"card__content\">\n              <h2 className=\"card__title\">{movie.Title} ({movie.Year})</h2>\n            </div>\n            <button className=\"button card__button\">\n                More details\n              </button>\n          </div>\n        ))}\n\n      </div>\n      {movies.length !== 0 && (\n        <Pagination\n          activePage={currentPage}\n          totalItemsCount={numberOfPosts}\n          itemsCountPerPage={10}\n          onChange={(pageNumber) => setCurrentPageWithScroll(pageNumber)}\n          innerClass=\"pages\"\n          linkClass=\"pages__link\"\n          activeLinkClass=\"pages__link--active\"\n          prevPageText=\"&#8249;\"\n          nextPageText=\"&#8250;\"\n        />\n      )}\n    </>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getMovieInfo } from '../../api';\nimport * as selectors from '../../store';\nimport noPosterImg from '../../assets/images/no-poster-available.jpg';\nimport {\n  setMovieInfo,\n  startLoadingDetails,\n  loadingErrorDetails,\n  deleteMovieInfo,\n} from '../../store/details';\n\nexport const DetailsMovie = () => {\n  const dispatch = useDispatch();\n  const imdbId = useSelector(selectors.getImdbId);\n  const movieInfo = useSelector(selectors.getMovieInfo);\n  const isLoading = useSelector(selectors.getIsLoadingDetails);\n  const errorName = useSelector(selectors.getErrorNameDetails)\n\n  const [description, setDescription] = useState('');\n  const [shortDescription, setShortDescription] = useState('');\n  const [isShortDescription, setIsShortDescription] = useState(true);\n\n  useEffect(() => {\n    if (!imdbId) {\n      return;\n    }\n\n    dispatch(startLoadingDetails())\n    getMovieInfo(imdbId)\n      .then(res => {\n        if(res.Response === 'False') {\n          dispatch(loadingErrorDetails(res.Error));\n          return;\n        }\n\n        dispatch(setMovieInfo(res));\n        setDescription(res.Plot);\n        setShortDescription(() => {\n          if(res.Plot === res.Plot.split('.').slice(0, 2).join('.')) {\n            return res.Plot;\n          } else {\n            return res.Plot.split('.').slice(0, 2).join('.').concat('.');\n          }\n        });\n        setIsShortDescription(true)\n      });\n  }, [imdbId]);\n\n  if(isLoading) {\n    return (\n      <>\n        <h2 className=\"details__heading\">Details</h2>\n        <div className=\"spinner\">\n          <div className=\"dot1\"></div>\n          <div className=\"dot2\"></div>\n        </div>\n      </>\n    )\n  }\n\n  if(errorName) {\n    return (\n      <>\n        <h2 className=\"details__heading\">Details</h2>\n        <p className=\"error__message\">Oops... {errorName} Please, try again.</p>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <div className=\"details__header\">\n        <h2 className=\"details__heading\">Details</h2>\n        <button\n          className={`details__button ${movieInfo ? '' : 'hidden'}`}\n          onClick={() => dispatch(deleteMovieInfo())}\n        >\n          &#10060;\n        </button>\n      </div>\n      {movieInfo && (\n        <div className=\"details__card\">\n          <div className=\"details__image\">\n          \n            <img src={movieInfo.Poster !== 'N/A'\n                ? movieInfo.Poster\n                : noPosterImg\n              }\n              alt=\"Film logo\"\n            />\n          </div>\n          <div className=\"details__content\">\n            <h2 className=\"details__title\">{movieInfo.Title} ({movieInfo.Year})</h2>\n            {movieInfo.imdbRating !== 'N/A' && (\n              <div className=\"details__rating\">\n                <p className=\"details__rating-num\">{movieInfo.imdbRating}/10</p>\n              </div>\n            )}\n            {isShortDescription && description !== 'N/A' ? (\n              <div className=\"details__description\">\n                <p>\n                  {shortDescription}\n                </p>\n                {shortDescription !== description && (\n                  <a\n                    className=\"details__show-more\"\n                    onClick={() => setIsShortDescription(false)}\n                  >\n                    Show more\n                  </a>\n                )}\n\n              </div>\n            ) : description !== 'N/A'&& (\n              <div className=\"details__description\">\n                <p>\n                  {description}\n                </p>\n                {shortDescription !== description && (\n                  <a\n                    className=\"details__show-more\"\n                    onClick={() => setIsShortDescription(true)}\n                  >\n                    Show less\n                  </a>\n                )}\n              </div>\n            )}\n            {movieInfo.Director !== 'N/A' && (\n              <p className=\"details__creators\">\n                <span className=\"details__important\">{'Director: '}</span>\n                {movieInfo.Director}\n              </p>\n            )}\n            {movieInfo.Writer !== 'N/A' && (\n              <p className=\"details__creators\">\n                <span className=\"details__important\">{'Writers: '}</span>\n                {movieInfo.Writer}\n              </p>\n            )}\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as selectors from '../../store';\nimport { setQueryStore, setErrorOffMovies } from '../../store/movies';\nimport { setCurrentPage } from '../../store/pagination';\nimport { addQuery, deleteQueries } from '../../store/queries';\n\nexport const SearchForm = () => {\n  const dispatch = useDispatch();\n  const queries = useSelector(selectors.getQueries);\n  const error = useSelector(selectors.getErrorNameMovies);\n  const lastQuery = useSelector(selectors.getLastQuery);\n\n  const [query, setQuery] = useState(lastQuery);\n  const [isShowHistory, setIsShowHistory] = useState(false);\n\n  const handleSearch = (event) => {\n    event.preventDefault();\n    dispatch(setCurrentPage(1));\n    dispatch(setQueryStore(query.trim()));\n    dispatch(addQuery(query.trim()));\n    setIsShowHistory(false);\n  }\n\n  return (\n    <>\n      <form className=\"form\" onSubmit={(event) => handleSearch(event)}>\n        <div className=\"form__field\">\n          <input\n              type=\"text\"\n              placeholder=\"Enter the title of the movie\"\n              className={`form__input ${error !== '' && 'form__input--error'}`}\n              value={query}\n              onChange={event => {\n                setQuery(event.target.value);\n                dispatch(setErrorOffMovies());\n              }}\n          />\n          <button\n            type=\"submit\"\n            className=\"button form__button form__button--full\"\n          >\n            Search\n          </button>\n          <button\n            type=\"submit\"\n            className=\"button form__button form__button--short\"\n          >\n            &#x1F50D;\n          </button>\n        </div>\n      </form>\n      <div className=\"search-history\">\n        {queries.length > 1 && (\n          <>\n            <a\n              className=\"search-history__title\"\n              onClick={() => setIsShowHistory(!isShowHistory)}\n            >\n              {isShowHistory ? 'Hide search history' : 'Show search history'}\n            </a>\n            <a\n              className=\"search-history__title\"\n              onClick={() => dispatch(deleteQueries())}\n            >\n              Clear history :)\n            </a>\n            {isShowHistory && (\n            <ul className=\"search-history__list\">\n              {queries.map((query, i) => {\n                return (\n                  <li key={i} className=\"search-history__item\">\n                    <a\n                      className=\"search-history__link\"\n                      onClick={() => {\n                        dispatch(addQuery(query));\n                        dispatch(setQueryStore(query));\n                        dispatch(setCurrentPage(1));\n                        setQuery(query);\n                        setIsShowHistory(false)\n                      }}\n                    >\n                      {query}\n                    </a>\n                  </li>\n                )\n              })}\n            </ul>\n          )}\n          </>\n        )}\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { MoviesList } from './components/MoviesList';\nimport { DetailsMovie } from './components/DetailsMovie';\nimport { SearchForm } from './components/SearchForm';\n\nexport const App = () => {\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <SearchForm />\n        <MoviesList />\n      </div>\n      <div className={`details`}>\n        <DetailsMovie />\n      </div>\n    </div>\n  );\n};\n\n//  ${isLoading ? 'hidden' : ''}","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { App } from './App';\nimport store from './store';\nimport './assets/css/main.css';\n\nconst app = (\n  <Provider store={store}>\n    <App />\n  </Provider>\n)\n\nrender(app, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/no-poster-available.eac23845.jpg\";"],"sourceRoot":""}